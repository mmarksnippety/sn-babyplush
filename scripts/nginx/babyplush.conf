upstream babyplush_server {

    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).
    server unix:/home/app/sn-babyplush/babyplush/runtime/gunicorn.sock fail_timeout=0;
}

server {
    listen       80;
    server_name  www.babyplush.pl;
    return       301 http://babyplush.pl$request_uri;
}

server {
    listen       80;
    server_name  .babyplush.net
    return       301 http://babyplush.pl$request_uri;
}

server {

    listen 80;
    server_name babyplush.pl;

    client_max_body_size 4G;

    access_log /home/app/sn-babyplush/babyplush/runtime/logs/nginx-access.log;
    error_log /home/app/sn-babyplush/babyplush/runtime/logs/nginx-error.log;

    location / {
        alias   /home/app/sn-babyplush/babyplush/public/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_redirect off;
        proxy_pass_header Server;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://babyplush_server;
            break;
        }
    }
}
